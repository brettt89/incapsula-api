PerformanceConfig:
  type: object
  properties:
    advanced_caching_rules:
      $ref: '#/components/schemas/AdvancedCachingRules'
    acceleration_level:
      type: string
    async_validation:
      type: boolean
    minify_javascript:
      type: boolean
    minify_css:
      type: boolean
    minify_static_html:
      type: boolean
    compress_jpeg:
      type: boolean
    progressive_image_rendering:
      type: boolean
    aggressive_compression:
      type: boolean
    compress_png:
      type: boolean
    on_the_fly_compression:
      type: boolean
    tcp_pre_pooling:
      type: boolean
    comply_no_cache:
      type: boolean
    comply_vary:
      type: boolean
    use_shortest_caching:
      type: boolean
    prefer_last_modified:
      type: boolean
    disable_client_side_caching:
      type: boolean
    cache300x:
      type: boolean
    cache_headers:
      type: array
      items:
        $ref: '#/components/schemas/Header'
    incap_rules:
      type: array
      items:
        $ref: '#/components/schemas/IncapRule'

Security:
  type: object
  properties:
    waf:
      $ref: '#/components/schemas/WAFRules'
    acls:
      $ref: '#/components/schemas/ACLRules'

SSLConfig:
  type: object
  properties:
    origin_server:
      $ref: '#/components/schemas/OriginServer'
    generated_certificate:
      $ref: '#/components/schemas/GeneratedCertificate'
    custom_certificate:
      $ref: '#/components/schemas/CustomCertificate'

Warning:
  type: object
  properties:
    type:
      type: string
    dns_record_name:
      type: string
    mail_record_name:
      type: string
    set_type_to:
      type: string
    set_data_to:
      type: string

DualFactorSettings:
  type: object
  properties:
    specificUsers:
      type: array
      items:
        $ref: '#/components/schemas/User'
    enabled:
      type: boolean
    customAreas:
      type: array
      items:
        type: object
    customAreasExceptions:
      type: array
      items:
        type: object
    allowAllUsers:
      type: boolean
    shouldSuggestApplicatons:
      type: boolean
    allowedMedia:
      type: array
      items:
        type: string
    shouldSendLoginNotifications:
      type: boolean
    version:
      type: integer

LoginProtect:
  type: object
  properties:
    enabled:
      type: boolean
    specific_users_list:
      type: array
      items:
        $ref: '#/components/schemas/User'
    send_lp_notifications:
      type: boolean
    allow_all_users:
      type: boolean
    authentication_methods:
      type: array
      items:
        type: string
    urls:
      type: array
      items:
        type: string
    url_patterns:
      type: array
      items:
        type: string

components:
  schemas:

    CustomCertificate:
      type: object
      properties:
        active:
          type: boolean
        expirationDate:
          type: integer
        revocationError:
          type: boolean
        validityError:
          type: boolean
        chainError:
          type: boolean
        hostnameMismatchError:
          type: boolean

    DNS:
      type: object
      required:
        - dns_record_name
        - set_type_to
        - set_data_to
      properties:
        dns_record_name:
          type: string
        set_type_to:
          type: string
        set_data_to:
          type: array
          items:
            type: string

    GeneratedCertificate:
      type: object
      properties:
        ca:
          type: string
        validation_method:
          type: string
        validation_data:
          type: array
          items:
            $ref: '#/components/schemas/DNS'
        san:
          type: array
          items:
            type: string
        validation_status:
          type: string

    OriginServer:
      type: object
      properties:
        detected:
          type: boolean
        detectionStatus:
          type: string

    Header:
      type: object
      properties:
        headerName:
          type: string

    CacheResource:
      type: object
      properties:
        pattern:
          type: string
        url:
          type: string
        ttl:
          type: integer
        ttlUnits:
          type: string

    AdvancedCachingRules:
      type: object
      properties:
        never_cache_resources:
          type: array
          items:
            $ref: '#/components/schemas/CacheResource'
        always_cache_resources:
          type: array
          items:
            $ref: '#/components/schemas/CacheResource'
              
    User:
      type: object
      required:
        - email
        - name
      properties:
        email:
          type: string
        name:
          type: string
        status:
          type: string

    ACLRule:
      type: object
      required:
        - id
        - name
        - ips
      properties:
        id:
          type: string
        name:
          type: string
        ips:
          type: array
          items:
            type: string
        exceptions:
          type: array
          items:
            $ref: '#/components/schemas/Exception'

    ACLRules:
      type: object
      required:
        - rules
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/ACLRule'

    IncapRule:
      type: object
      required:
        - id
        - name
        - action
        - creation_date
        - rule
      properties:
        id:
          type: integer
        name:
          type: string
        action:
          type: string
        creation_date:
          type: integer
        rule:
          type: string

    WAFRules:
      type: object
      required:
        - rules
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/WAFRule'

    WAFRule:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
        action:
          type: string
        action_text:
          type: string
        block_bad_bots:
          type: boolean
        challenge_suspected_bots:
          type: boolean
        exceptions:
          type: array
          items:
            $ref: '#/components/schemas/Exception'
        activation_mode:
          type: string
        activation_mode_text:
          type: string
        ddos_traffic_threshold:
          type: string
        ddos_traffic_threshold_text:
          type: string

    Exception:
      type: object
      required:
        - res
        - id
        - values
      properties:
        res:
          type: integer
        id:
          type: integer
        values:
          type: array
          items:
            type: object
            required:
              - id
              - name
            properties:
              id:
                type: string
              name:
                type: string
              urls:
                type: array
                items:
                  type: object
                  required:
                    - value
                    - pattern
                  properties:
                    value:
                      type: string
                    pattern:
                      type: string
